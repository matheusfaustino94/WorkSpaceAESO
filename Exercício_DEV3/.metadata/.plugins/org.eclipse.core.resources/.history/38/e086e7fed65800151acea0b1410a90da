package br.aeso.ex01Maurício.exercício.controlador;

import java.util.ArrayList;

import br.aeso.ex01Maurício.exercício.exceptions.projetoException;
import br.aeso.ex01Maurício.exercício.modelo.Endereço;
import br.aeso.ex01Maurício.exercício.modelo.Fornecedor;
import br.aeso.ex01Maurício.exercício.repositorio.IRepositorio;
import br.aeso.ex01Maurício.exercício.repositorio.RepositorioEnderecoJDBC;
import br.aeso.ex01Maurício.exercício.repositorio.RepositorioFornecedorJDBC;

public class ControladorEndereco {

	IRepositorio<Endereço, Integer> repositorioEndereco;
	IRepositorio<Fornecedor, String> repositorioFornecedor;
	

	public ControladorEndereco() {
		repositorioEndereco = new RepositorioEnderecoJDBC();
		repositorioFornecedor = new RepositorioFornecedorJDBC();
	}

	public void cadastrarEntities(Endereço endereco) throws projetoException {
		if (endereco.equals(null) || endereco.getRua().equals("") || endereco.getBairro().equals("")
				|| endereco.getCep().equals("") || endereco.getCidade().equals("")
				|| endereco.getComplemento().equals("") || endereco.getNumero().equals("")) {
			throw new projetoException("Endereço ou algum atributo inválido");
		} else
			repositorioEndereco.cadastrar(endereco);
	}

	public void atualizarEntities(Endereço endereco) throws projetoException {
		if (endereco.equals(null) || endereco.getRua().equals("") || endereco.getBairro().equals("")
				|| endereco.getCep().equals("") || endereco.getCidade().equals("")
				|| endereco.getComplemento().equals("") || endereco.getNumero().equals("")) {
			throw new projetoException("Endereço ou algum atributo inválido");
		} else
			repositorioEndereco.atualizar(endereco);
	}

	public boolean removerEntities(Integer id_fornecedor) throws projetoException {
		return repositorioEndereco.remover(id_fornecedor);
	}

	public Endereço procurarEntities(String cpf) throws projetoException {
		Fornecedor f = repositorioFornecedor.procurar(cpf);
		Integer id;
		if(f != null){
			id = f.getID();	
		} else {
			throw new projetoException("Endereço não existe!");
		}
		return repositorioEndereco.procurar(id);
	}

	public ArrayList<Endereço> listarEntities() throws projetoException {
		return repositorioEndereco.listarEntities();
	}

}
