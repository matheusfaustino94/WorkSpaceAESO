package br.aeso.ex01Maurício.exercício.repositorio;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import br.aeso.ex01Maurício.exercício.exceptions.projetoException;
import br.aeso.ex01Maurício.exercício.modelo.Endereço;
import br.aeso.ex01Maurício.exercício.util.JDBCConnection;

public class RepositorioEnderecoJDBC implements IRepositorio<Endereço> {

	private Connection conexaoBD;

	public RepositorioEnderecoJDBC() {
		conexaoBD = JDBCConnection.getConnection();
	}

	@Override
	public void cadastrar(Endereço entity) throws projetoException {

		String sqlInsert = "insert into projeto01.endereco (rua, numero, complemento, bairro, cidade, cep) "
				+ "values (?,?,?,?,?,?)";

		try {
			PreparedStatement pStatement = conexaoBD.prepareStatement(
					sqlInsert, Statement.RETURN_GENERATED_KEYS);
			pStatement.setString(1, entity.getRua());
			pStatement.setString(2, entity.getNumero());
			pStatement.setString(3, entity.getComplemento());
			pStatement.setString(4, entity.getBairro());
			pStatement.setString(5, entity.getCidade());
			pStatement.setString(6, entity.getCep());
			pStatement.execute();

			Integer id_endereço = 0;
			ResultSet rSet = pStatement.getGeneratedKeys();

			while (rSet.next()) {
				id_endereço = rSet.getInt(1);
			}
			entity.setID(id_endereço);

			rSet.close();
			pStatement.close();
			conexaoBD.close();

		} catch (SQLException e) {
			throw new RuntimeException();
		}

	}

	@Override
	public Endereço procurar(String cpf) throws projetoException {

		String sqlConsulta = "select * from projeto01.endereco where cpf = ?";
		PreparedStatement pStatement;
		ResultSet rSet;
		Endereço endereco = new Endereço();

		try {
			pStatement = conexaoBD.prepareStatement(sqlConsulta);
			pStatement.setString(1, cpf);
			rSet = pStatement.executeQuery();

			if (rSet != null && rSet.next()) {
				endereco.setRua(rSet.getString("rua"));
				endereco.setNumero(rSet.getString("numero"));
				endereco.setComplemento(rSet.getString("complemento"));
				endereco.setBairro(rSet.getString("bairro"));
				endereco.setCidade(rSet.getString("cidade"));
				endereco.setCep(rSet.getString("cep"));
			}

			pStatement.close();
			rSet.close();
			conexaoBD.close();

		} catch (SQLException e) {
			throw new RuntimeException();
		}

		return endereco;
	}

	@Override
	public boolean remover(String cpf) throws projetoException {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public void atualizar(Endereço entity) throws projetoException {
		// TODO Auto-generated method stub

	}

	@Override
	public ArrayList<Endereço> listarEntities() throws projetoException {
		// TODO Auto-generated method stub
		return null;
	}

}
